DROP TABLE SEDE_DIPARTIMENTO;
DROP TABLE LAVORA_SU;
DROP TABLE FAMILIARE_A_CARICO;
DROP TABLE PROGETTO;
DROP TABLE DIPARTIMENTO cascade constraints;
DROP TABLE IMPIEGATO cascade constraints;



CREATE TABLE DIPARTIMENTO(
NUMERO_DIPARTIMENTO NUMBER(2,0) PRIMARY KEY, 
NOME_DIPARTIMENTO VARCHAR2(20) UNIQUE NOT NULL,
CF_DIRETTORE CHAR(16),
INIZIO_ATTIVITA_DIRETTORE DATE);
-- NOTA BENE: NON E' POSSIBILE SCRIVERE IL VINCOLO DI CHIAVE ESTERNA CON IMPIEGATO PERCHE' TALE TABELLA ANCORA NON ESISTE
-- SI POTREBBE IMPORRE IL NOT NULL SU CF_DIRETTORE PER ESPRIMERE CHE OGNI DIPARTIMENTO HA NECESSARIAMENTE UN DIRETTORE, 
-- MA NON VARREBBE IL VINCOLO DI INTEGRITA' REFERENZIALE NON ESSENDO DEFINITA LA CHIAVE ESTERNA "DIRIGE"

CREATE TABLE IMPIEGATO(
CF CHAR(16) PRIMARY KEY,
NOME VARCHAR2(20) NOT NULL,
SECONDO_NOME VARCHAR2(20),
COGNOME VARCHAR2(20) NOT NULL,
DATA_NASCITA DATE NOT NULL,
VIA VARCHAR2(20),
CIVICO NUMBER(5,0),
CAP VARCHAR2(6),
CITTA VARCHAR2(20),
SESSO VARCHAR2(1),
STIPENDIO NUMBER,
CF_SUPERVISORE CHAR(16),
NUMERO_DIPARTIMENTO NUMBER(2,0) NOT NULL,
CONSTRAINT FK_SUPERVISIONA FOREIGN KEY (CF_SUPERVISORE) REFERENCES IMPIEGATO(CF) ON DELETE SET NULL,
CONSTRAINT FK_LAVORA_PER FOREIGN KEY (NUMERO_DIPARTIMENTO) REFERENCES DIPARTIMENTO(NUMERO_DIPARTIMENTO) ON DELETE CASCADE,
CONSTRAINT CHECK_SESSO CHECK(SESSO IN ('M','F')),
CONSTRAINT CHECK_STIPENDIO CHECK(STIPENDIO>500));
-- NOTA BENE: E' ESPRIMIBILE (E DI FATTO ESPRESSA) LA TOTALITA' DI IMPIEGATO SU DIPARTIMENTO, MA NON QUELLA INVERSA


ALTER TABLE DIPARTIMENTO ADD CONSTRAINT FK_E_DIRETTO_DA FOREIGN KEY(CF_DIRETTORE) REFERENCES IMPIEGATO(CF) ON DELETE SET NULL;
-- NOTA BENE: ORA LA CHIAVE ESTERNA E' STATA AGGIUNTA A DIPARTIMENTO. SE AGGIUNGESSIMO IL NOT NULL SU CF_DIRETTORE 
-- PER ESPRIMERE LA TOTALITA' SU DIPARTIMENTO (TUTTI I DIPARTIMENTI SONO DIRETTI DA QUALCHE DIRETTORE) SI CREEREBBE 
-- UN LOOP DI CHIAVI ESTERNE CHE RENDEREBBE IMPOSSIBILE  IL POPOLAMENTO DI DIPARTIMENTO ED IMPIEGATO, POICHE' ADESSO
-- IL VINCOLO DI INTEGRITA' REFERENZIALE VALE

CREATE TABLE SEDE_DIPARTIMENTO(
NUMERO_DIPARTIMENTO NUMBER(2,0),
CITTA_SEDE VARCHAR2(20),
CONSTRAINT PK_SEDE PRIMARY KEY (NUMERO_DIPARTIMENTO,CITTA_SEDE),
CONSTRAINT FK_E_SEDE_DI FOREIGN KEY (NUMERO_DIPARTIMENTO) REFERENCES DIPARTIMENTO(NUMERO_DIPARTIMENTO) ON DELETE CASCADE);


CREATE TABLE PROGETTO(
NUMERO_PROGETTO NUMBER(4,0) PRIMARY KEY,
NOME_PROGETTO VARCHAR2(20) UNIQUE NOT NULL,
SEDE_PROGETTO VARCHAR2(20),
DIPARTIMENTO_RESPONSABILE NUMBER(2,0),
CONSTRAINT FK_E_CONTROLLATO FOREIGN KEY (DIPARTIMENTO_RESPONSABILE) REFERENCES DIPARTIMENTO(NUMERO_DIPARTIMENTO) ON DELETE CASCADE);

CREATE TABLE LAVORA_SU(
CF_IMPIEGATO CHAR(16),
NUMERO_PROGETTO NUMBER(4,0),
ORE NUMBER(3,0),
CONSTRAINT PK_LAVORA_SU PRIMARY KEY (CF_IMPIEGATO,NUMERO_PROGETTO),
CONSTRAINT FK_IMPIEGATO FOREIGN KEY (CF_IMPIEGATO) REFERENCES IMPIEGATO(CF) ON DELETE CASCADE,
CONSTRAINT FK_PROGETTO FOREIGN KEY (NUMERO_PROGETTO) REFERENCES PROGETTO(NUMERO_PROGETTO) ON DELETE CASCADE);
-- NOTA BENE: NON E' ESPRIMIBILE LA TOTALITA' NE' SU PROGETTO, NE' SU IMPIEGATO

CREATE TABLE FAMILIARE_A_CARICO(
CF_IMPIEGATO CHAR(16),
NOME_FAMILIARE VARCHAR2(20),
SESSO VARCHAR2(1),
DATA_NASCITA DATE NOT NULL,
RELAZIONE_PARENTELA VARCHAR2(20),
CONSTRAINT PK_FAMILIARE_A_CARICO PRIMARY KEY (CF_IMPIEGATO, NOME_FAMILIARE),
CONSTRAINT FK_E_A_CARICO_DI FOREIGN KEY (CF_IMPIEGATO) REFERENCES IMPIEGATO(CF),
CONSTRAINT CHECK_SESSO2 CHECK(SESSO IN ('M','F')));
-- NOTA BENE: LA TOTALITA' E' ESPRESSA IMPLICITAMENTE DAL VINCOLO DI CHIAVE PRIMARIA
